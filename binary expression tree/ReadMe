Let me document how long it takes me to get ready for the algorithm called infix expression to binary expression tree. 

July 19, 2018 9:00 AM - 9:30 AM
30 minutes to write a brute force solutin without implementation of parser, I did not have time to write code for parser. 
Time complexity is O(N^2). The parse of the expression is too complicated to write

July 19 - July 20, 2018

Study binary expression tree, and also read the article and code to conver infix expression to postfix expression etc. 

Blogs related to study are the following:


http://juliachencoding.blogspot.com/2018/07/binary-expression-tree-study.html


http://juliachencoding.blogspot.com/2018/07/infix-expression-to-construct-binary.html


http://juliachencoding.blogspot.com/2018/07/winning-risk-game-in-tennis.html

July 14, 2018 7:30 AM - 9:00 AM
A peer worked on the algorithm more than 30 minutes. I observed how he tried to solve the problem. He does not have the idea to use stack to parse the string. 

July 14, 2018 9:00 AM - 11:00 aM
Spent more than 30 minutes in mock interview and watch a peer how he solved the problem using stack. He knew the optimal solution using stack and optimal time complexity O(N). 

http://juliachencoding.blogspot.com/2018/07/a-friend-can-help-you.html

July 16, 2018

Write C# code for an implementation:
https://github.com/jianminchen/AlgorithmsByTopics/blob/master/binary%20expression%20tree/Infix%20expression%20to%20binary%20expression%20tree.cs

